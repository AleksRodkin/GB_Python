from time import sleep
# Задача 34:  Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. 
# Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает, 
# Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв) 
# в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова, если во фразе несколько слов, 
# то они разделяются дефисами. Фразы отделяются друг от друга пробелами. Стихотворение  Винни-Пух вбивает 
# в программу с клавиатуры. В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, 
# если с ритмом все не в порядке

def count_vowels(words):
  vowels = ['А', 'Е', 'Ё', 'И', 'О', 'У', 'Ы', 'Э', 'Ю', 'Я']
  # например на входе строка "ПАМ-пам-пам ПУ-ПУ-ПУ ТУ-ТУ-РУ"
  count = 0
  count_list = []
  words_split = words.upper().split() # ['ПАМ-ПАМ-ПАМ', 'ПУ-ПУ-ПУ', 'ТУ-ТУ-РУ']
  # print(words_split) 
  for i in range(len(words_split)):
    list_letters = list(words_split[i]) # ['П', 'А', 'М', '-', 'П', 'А', 'М', '-', 'П', 'А', 'М']
    # print(list_letters) 
    for j in range(len(list_letters)):
      # print(list_letters[j]) 
      if list_letters[j] in vowels: # ПАМ-ПАМ-ПАМ
        count += 1
    count_list.append(count)
    count = 0 # обнуляем
  return count_list

def check_rhythm(check_count):
  if check_count == '' or check_count == []:
      return "Вы ничего не ввели"
  elif len(check_count) == 1:
      return "Сложно проверить ритм у одной фразы, знаете ли"
  for i in range(len(check_count)):
    if check_count[i-1] != check_count[i]:
      return "Пам парам (не всё в порядке)"
  return "Парам пам-пам (всё в порядке)"

print("****************************************************************")
print("Задача 34: Данная программа на вход принимает фразы кричалки и выдает “Парам пам-пам”, если с ритмом кричалки все в порядке и “Пам парам”, если с ритмом все не в порядке") 
print("Фраза может состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами.\n!! Фразы отделяются друг от друга пробелами.")
print("Пример фразы: пара-ра-рам рам-пам-папам па-ра-па-да")
phrase = input("Введите фразу: ")
sleep(1)
print()
print(check_rhythm(count_vowels(phrase)))
print()
sleep(2)
print("Загрузка следующей задачи...")
print()
sleep(3)




# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6), которая принимает 
# в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца. Аргументы num_rows и num_columns
# указывают число строк и столбцов таблицы, которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы 
# (подумайте, почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой ровно два 
# аргумента, как, например, у операции умножения.

def print_operation_table(operation, num_rows, num_columns):
  for i in range(1, num_rows + 1):
    for j in range(1, num_columns + 1):
      print("{:2d}".format(operation(i, j)), end=' ')
      if j == num_columns:
          print()

print("****************************************************************")
print(f"Задача 36: Данная программа принимает в качестве аргумента функцию (допустим уже приняла умножение индексов), вычисляющую элемент по номеру строки и столбца, а также принимает количество строк и столбцов.")
print("На выходе программа печатает таблицу элементов")
new_rows = int(input("Введите количество строк: "))
new_colums = int(input("Введите количество столбцов: "))
print()
print_operation_table(lambda x, y: x * y, new_rows, new_colums)
print()
sleep(2)
print("*** Ну вот и всё, ребята! ***")
print()